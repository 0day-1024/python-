
#* 检查多个条件
#* 你可能想同时检查多个条件。
#* 例如，有时候需要在两个条件都为 True 时才执⾏相应的操作，⽽有时候只要求⼀个条件为 True。
#* 在这些情况下，关键字 and 和 or 可助你⼀臂之⼒。

#* 使⽤ and 检查多个条件
#* 要检查两个条件是否都为 True，可使⽤关键字 and 将两个条件测试合⽽为⼀。
#* 如果每个条件测试都通过了，整个表达式就为 True；如果⾄少⼀个条件测试没有通过，整个表达式就为 False。
#* 例如，要检查两个⼈是否都不⼩于 21 岁，可使⽤下⾯的条件测试：
age_0 = 22
age_1 = 18
print(age_0 >= 21 and age_1 >= 21)
age_1 = 22
print(age_0 >= 21 and age_1 >= 21)

#* 为了改善可读性，可将每个条件测试都分别放在⼀对括号内，但并⾮必须这样做。
#* 如果使⽤括号，条件测试将类似于下⾯这样：
(age_0 >= 21) and (age_1 >= 21)

print("\n")

#* 使⽤ or 检查多个条件
#* 关键字 or 也能够让你检查多个条件，但只要满⾜其中⼀个条件，就能通过整个条件测试。
#* 仅当所有条件测试都没有通过时，使⽤ or 的表达式才为 False。
#* 下⾯再次检查两个⼈的年龄，但检查的条件是⾄少有⼀个⼈的年龄不⼩于 21 岁：
age_0 = 22
age_1 = 18
print(age_0 >= 21 or age_1 >= 21)
age_0 = 18
print(age_0 >= 21 or age_1 >= 21)

print("\n")

#* 检查特定的值是否在列表中
#* 有时候，执⾏操作前必须检查列表是否包含特定的值。
#* 例如，在结束⽤户的注册过程之前，需要检查他提供的⽤户名是否已在⽤户名列表中；
#* 在地图程序中，需要检查⽤户提交的位置是否在已知位置的列表中。
#* 要判断特定的值是否在列表中，可使⽤关键字 in。
#* 下⾯看看你可能会为⽐萨店编写的⼀些代码。
#* 这些代码⾸先创建⼀个列表，其中包含⽤户点的⽐萨配料，然后检查特定的配料是否在该列表中。
requested_toppings = ['mushrooms', 'onions', 'pineapple']
print('mushrooms' in requested_toppings)
print('pepperoni' in requested_toppings)

#* 检查特定的值是否不在列表中
#* 还有些时候，确定特定的值不在列表中很重要。
#* 在这种情况下，可使⽤关键字 not in。
#* 例如，有⼀个列表包含被禁⽌在论坛上发表评论的⽤户，这样就可以在允许⽤户提交评论前检查他是否被禁⾔了：
banned_users = ['andrew', 'carolina', 'david']
user = 'marie'
if user not in banned_users:
    print(f"{user.title()}, you can post a response if you wish.")

#* 布尔表达式
#* 随着对编程的了解越来越深⼊，你将遇到术语布尔表达式，它不过是条件测试的别名罢了。
#* 与条件表达式⼀样，布尔表达式的结果要么为 True，要么为 False。
#* 布尔值通常⽤于记录条件，如游戏是否正在运⾏或⽤户是否可以编辑⽹站的特定内容：
game_active = True
can_edit = False